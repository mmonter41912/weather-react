[{"/Users/marlenalvarado/Desktop/weather-react/src/index.js":"1","/Users/marlenalvarado/Desktop/weather-react/src/App.js":"2","/Users/marlenalvarado/Desktop/weather-react/src/reportWebVitals.js":"3","/Users/marlenalvarado/Desktop/weather-react/src/Weather.js":"4"},{"size":543,"mtime":1608018854779,"results":"5","hashOfConfig":"6"},{"size":569,"mtime":1608251712029,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1606958840739,"results":"8","hashOfConfig":"6"},{"size":3236,"mtime":1608244380308,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"4va8fc",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/Users/marlenalvarado/Desktop/weather-react/src/index.js",[],["20","21"],"/Users/marlenalvarado/Desktop/weather-react/src/App.js",["22","23"],"/Users/marlenalvarado/Desktop/weather-react/src/reportWebVitals.js",[],"/Users/marlenalvarado/Desktop/weather-react/src/Weather.js",["24","25"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport \"./Weather.css\";\n\nexport default function Weather (props){\n    \n    const[weatherData, setWeatherData] = useState({ ready: false});\n\n    function handleResponse(response){\n        \n        setWeatherData({\n            ready: true,\n            temperature: response.data.main.temp,\n            humidity: response.data.main.humidity,\n            date: \"Monday 07:00\",\n            description: response.data.weather[0].description,\n            iconUrl: \"https://ssl.gstatic.com/onebox/weather/64/partly_cloudy.png\",\n            wind: response.data.wind.speed,\n            city: response.data.name\n        });\n\n    }\n\n    if(weatherData.ready){\n        return(\n            <div className=\"Weather\">\n                \n                <div className=\"row\">\n                    <nav className=\"navbar navbar-transparent\" className=\"col\">\n                        <form className=\"form-inline\" id=\"search-form\">\n                            <input className=\"form-control mr-sm-2\" type=\"search\" id=\"city-input\" placeholder=\"Search\" aria-label=\"Search\" />\n                            <button className=\"btn\">\n                                <i className=\"fa fa-search\"></i></button>\n                            <button className=\"btn btn-succes\" id=\"currentLocationButton\">\n                                <i className=\"fas fa-location-arrow\"></i></button>\n                        </form>\n                    </nav>\n                    \n                </div>\n                <div className=\"row\">\n                 <h1 className=\"col\">\n                     {weatherData.city}\n                 </h1>\n                </div>\n    \n                <div className=\"row\">\n                    <div className=\"col\">\n                        \n                        <h2>{weatherData.date}</h2>\n                        <small className=\"text-capitalize\">{weatherData.description}</small>\n                      \n                    </div>\n                </div>\n    \n                <div className=\"col-4\">\n                    <img src={weatherData.icon} alt ={weatherData.description} className=\"float-left\"/>\n                \n                    <span className=\"temperature\">{Math.round(weatherData.temperature)}</span>\n                    <span className=\"units\">Â°F</span>\n                    \n    \n                        <ul className=\"humidity\">\n                            <li>\n                                Humidity: {weatherData.humidity}%\n                            </li>\n                            <li>\n                                Wind: {weatherData.wind} km/h\n                            </li>\n                        </ul>\n    \n                    <div className=\"col-8\" className=\"person\">\n                        <img src=\"images/WalkingDog.svg\" alt=\"Person\"/>\n                    </div>\n                \n                </div>\n    \n    \n            </div>\n        );\n\n    } else {\n        const apiKey = \"5ea09e8580063191dd08cfebcb59b6ab\";\n        let apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=imperial`;\n        axios.get(apiUrl).then(handleResponse);\n    \n\n\n    return \"Loading...\";\n    } \n    \n}",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":11,"column":78,"nodeType":"32","endLine":11,"endColumn":93},{"ruleId":"30","severity":1,"message":"31","line":14,"column":11,"nodeType":"32","endLine":14,"endColumn":26},{"ruleId":"33","severity":1,"message":"34","line":30,"column":64,"nodeType":"32","endLine":30,"endColumn":79},{"ruleId":"33","severity":1,"message":"34","line":72,"column":44,"nodeType":"32","endLine":72,"endColumn":62},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react/jsx-no-duplicate-props","No duplicate props allowed","no-global-assign","no-unsafe-negation"]